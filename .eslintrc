LOCAL_PATH = os.getenv("LOCAL_PATH", default='.')
NAMESPACE = os.getenv("NAMESPACE", default='integration-ms-ns')

# Apply command adjusted for Python app using kubectl or Tanzu (if you're using Tanzu)
k8s_custom_deploy(
    'python-it',
    apply_cmd="kubectl delete -f ./pipelinerun.yaml | true && kubectl apply -f ./pipelinerun.yaml -oyaml",
    delete_cmd="kubectl delete -f ./pipelinerun.yaml",
    deps=['requirements.txt', './src'],  # Adjust for Python app's dependencies
    container_selector='workload-knative-tilt',
    live_update=[
        # Sync the Python source code and requirements.txt
        sync('./src', '/workspace/source/src'),  # Adjust the source folder for your Python app
        sync('./requirements.txt', '/workspace/source/requirements.txt'),  # Sync requirements.txt
    ]
)

k8s_kind(
    'Service',
    api_version='serving.knative.dev/v1',
    image_json_path='.spec.template.spec.containers[0].image',
    pod_readiness='wait',
)
# # Expose the app via port forwarding on port 8080
# k8s_resource('python-it', port_forwards=["8080:8080"],
#     extra_pod_selectors=[{'app': 'investments-python-anton-00007'}],
#     )
            
# k8s_resource('python-it', extra_pod_selectors={'app': 'investments-python-anton-00001'}, discovery_strategy='selectosrs-only')


# Allow a specific Kubernetes context
allow_k8s_contexts('k8s-dev-nat-iterate-cluster')
 




 # final lines of output from the apply cmd
 [step-results] sha256:685940c2768b8f3e42be0caf17e99cf65e7b513cdd99986d77e655128b4a33c8hrlharbor-dev.harel-office.com/investments/investments-python-anton:c85e6d7b8aa29be1b360934a73384b85eec59a89-20250310-180613
[event: pod tekton-pipelineruns/investments-python-test-generate-apply-knative-pod] Container image "hrlharbor-dev.harel-office.com/tap-vmware/1.8/tap-packages@sha256:270bd02c777ef2ab3652f59eb31544634e994b9415bf1e34e53c09c281f6077c" already present on machine
[event: pod tekton-pipelineruns/investments-python-test-generate-apply-knative-pod] Container image "hrlharbor-dev.harel-office.com/tap-vmware/1.8/tap-packages@sha256:cd44dfd35a1e2f055ee51c713f0d141cce550108ccbf99e956824907d7f1be79" already present on machine
[prepare] 2025/03/10 18:07:05 Entrypoint initialization
[event: pod tekton-pipelineruns/investments-python-test-generate-apply-knative-pod] Container image "hrlharbor-dev.harel-office.com/dockerhub/linuxserver/yq:v1.0" already present on machine
[place-scripts] 2025/03/10 18:07:06 Decoded script /tekton/scripts/script-0-sz865
[place-scripts] 2025/03/10 18:07:06 Decoded script /tekton/scripts/script-1-m4z6j
[event: pod tekton-pipelineruns/investments-python-test-generate-apply-knative-pod] Container image "hrlharbor-dev.harel-office.com/devops/kubectl-sops:v1.1" already present on machine
[step-kubectl-apply] 2025/03/10 18:07:07 warning: unsuccessful cred copy: ".docker" from "/tekton/creds" to "/": unable to create destination directory: mkdir /.docker: permission denied
[step-generate-knative] apiVersion: serving.knative.dev/v1
[step-generate-knative] kind: Service
[step-generate-knative] metadata:
[step-generate-knative]   name: investments-python-anton
[step-generate-knative]   namespace: integration-ms-ns
[step-generate-knative] spec:
[step-generate-knative]   template:
[step-generate-knative]     metadata:
[step-generate-knative]     spec:
[step-generate-knative]       containers:
[step-generate-knative]         - image: hrlharbor-dev.harel-office.com/investments/investments-python-anton:c85e6d7b8aa29be1b360934a73384b85eec59a89-20250310-180613
[step-generate-knative]           name: workload-knative-tilt
[step-generate-knative]           resources: {}
[step-generate-knative]           securityContext:
[step-generate-knative]             allowPrivilegeEscalation: false
[step-generate-knative]             capabilities:
[step-generate-knative]               drop:
[step-generate-knative]                 - ALL
[step-generate-knative]             runAsNonRoot: true
[step-generate-knative]             runAsUser: 1000
[step-generate-knative]             seccompProfile:
[step-generate-knative]               type: RuntimeDefault
[step-generate-knative]       serviceAccountName: default
[step-kubectl-apply] service.serving.knative.dev/investments-python-anton configured
â–ˆ
